<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.omnifaces</groupId>
	<artifactId>omnifaces</artifactId>
	<version>4.4-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>OmniFaces</name>
	<description>Jakarta Faces 3.0+ utility library</description>
	<url>https://omnifaces.org</url>
	<organization>
		<name>OmniFaces</name>
		<url>https://omnifaces.org</url>
	</organization>
	<inceptionYear>2012</inceptionYear>

	<developers>
		<developer>
			<id>balusc</id>
			<name>Bauke Scholtz</name>
			<email>balusc@gmail.com</email>
		</developer>
		<developer>
			<id>arjan.tijms</id>
			<name>Arjan Tijms</name>
			<email>arjan.tijms@gmail.com</email>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<url>https://github.com/omnifaces/omnifaces</url>
		<connection>scm:git:git://github.com/omnifaces/omnifaces.git</connection>
		<developerConnection>scm:git:git@github.com:omnifaces/omnifaces.git</developerConnection>
	</scm>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>

		<!-- Java versions. -->
		<javase.version>11</javase.version>
		<jakartaee.version>9</jakartaee.version>

		<!-- Essential Maven defaults. -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>${javase.version}</maven.compiler.source>
		<maven.compiler.target>${javase.version}</maven.compiler.target>
		<maven.source.excludeResources>true</maven.source.excludeResources>

		<!-- Test server versions. -->
		<test.wildfly-faces4.version>28.0.1.Final</test.wildfly-faces4.version> <!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-preview-dist -->
		<test.wildfly-faces3.version>26.1.3.Final</test.wildfly-faces3.version> <!-- https://mvnrepository.com/artifact/org.wildfly/wildfly-preview-dist -->
		<test.liberty-faces3.version>21.0.0.12-beta</test.liberty-faces3.version> <!-- https://mvnrepository.com/artifact/io.openliberty.beta/openliberty-jakartaee9 TODO: EagerIT causes deployment exception -->
		<test.glassfish-faces4.version>7.0.5</test.glassfish-faces4.version> <!-- https://mvnrepository.com/artifact/org.glassfish.main.distributions/glassfish -->
		<test.glassfish-faces3.version>6.2.5</test.glassfish-faces3.version> <!-- https://mvnrepository.com/artifact/org.glassfish.main.distributions/glassfish -->
		<test.tomcat.version>10.1.10</test.tomcat.version> <!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat -->
		<test.piranha-faces4.version>23.6.0</test.piranha-faces4.version> <!-- https://mvnrepository.com/artifact/cloud.piranha.arquillian/piranha-arquillian-server TODO: requires newer Arquillian version but then other servers will fail their tests -->
		<test.tomee-faces3.version>9.1.0</test.tomee-faces3.version> <!-- https://mvnrepository.com/artifact/org.apache.tomee/apache-tomee -->

		<!-- Test impl versions for servletcontainers (Tomcat/Piranha). -->
		<test.mojarra4.version>4.0.2</test.mojarra4.version> <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.faces -->
		<test.mojarra3.version>3.0.4</test.mojarra3.version> <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.faces -->
		<test.myfaces4.version>4.0.1</test.myfaces4.version> <!-- https://mvnrepository.com/artifact/org.apache.myfaces.core/myfaces-impl TODO: subsequent Ajax submits on same view isn't seen as type=XHR but as type=NONE by RequestGuard -->
		<test.myfaces3.version>3.0.2</test.myfaces3.version> <!-- https://mvnrepository.com/artifact/org.apache.myfaces.core/myfaces-impl -->
		<test.weld5.version>5.1.1.Final</test.weld5.version> <!-- https://mvnrepository.com/artifact/org.jboss.weld.servlet/weld-servlet-shaded -->
		<test.weld4.version>4.0.3.Final</test.weld4.version> <!-- https://mvnrepository.com/artifact/org.jboss.weld.servlet/weld-servlet-shaded -->
		<test.hibernateValidator8.version>8.0.1.Final</test.hibernateValidator8.version> <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<test.hibernateValidator7.version>7.0.5.Final</test.hibernateValidator7.version> <!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
		<test.jsonp.version>2.0.1</test.jsonp.version> <!-- https://mvnrepository.com/artifact/org.glassfish/jakarta.json -->
		<test.jstl.version>2.0.0</test.jstl.version> <!-- https://mvnrepository.com/artifact/org.glassfish.web/jakarta.servlet.jsp.jstl NOTE: JSTL 3.x cannot be used because we also want to test Tomcat + Faces 3.0 -->
		<test.tyrus.version>2.1.3</test.tyrus.version> <!-- https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-container-servlet -->

		<!-- Arquillian config. -->
		<arquillian.browser>htmlUnit</arquillian.browser> <!-- To use a different browser, use e.g. mvn clean verify -Darquillian.browser=phantomjs -->

		<!-- Sonar config. -->
		<sonar.organization>balusc-github</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>

	<repositories>
		<repository>
			<id>jakarta-staging</id>
			<snapshots />
			<url>https://jakarta.oss.sonatype.org/content/repositories/staging</url> <!-- Currently only used for tyrus-bom:pom:2.1.0-M3 which is required by GlassFish 7.0.0-M4 -->
		</repository>
	</repositories>

	<dependencies>

		<!-- Required Jakarta EE 9 dependencies. -->
		<dependency>
			<groupId>jakarta.faces</groupId>
			<artifactId>jakarta.faces-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.el</groupId>
			<artifactId>jakarta.el-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.websocket</groupId>
			<artifactId>jakarta.websocket-api</artifactId>
			<version>2.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Optional Jakarta EE 9 dependencies. -->
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>3.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies. -->
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-web-api</artifactId>
			<version>9.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.9.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit5</groupId>
			<artifactId>arquillian-junit5-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-depchain</artifactId>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver</artifactId>
			<version>2.1.0.Final</version> <!-- Newer versions are incompatible with selenium-java:4.8.0 -->
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>4.8.0</version> <!-- $NO-MVN-MAN-VER$ -->
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>

			<!-- Test dependencies. -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.7.0.Alpha13</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-drone-bom</artifactId>
				<version>2.0.1.Final</version> <!-- Newer versions are incompatible with graphene-webdriver:2.1.0.Final -->
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>

			<!-- Exclude TypeScript files, unminified JavaScript files and Eclipse's jsfdia from resources. -->
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.ts</exclude>
					<exclude>**/*.unminified.js</exclude>
					<exclude>**/*.jsfdia</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>

			<!-- Prevent wrong JDK from being used to build the project. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[11,)</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<!-- Add missing license headers to source files. -->
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>4.1</version>
				<configuration>
                    <licenseSets>
                        <licenseSet>
                            <header>license.txt</header>
                            <excludes>
                                <exclude>*.*</exclude>
                            </excludes>
                        </licenseSet>
                    </licenseSets>
				</configuration>
			</plugin>

			<!-- Configure the TypeScript compiler and packer for omnifaces.js. -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>
				<configuration>
					<nodeVersion>v18.15.0</nodeVersion>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Configure the JavaScript minifier. -->
			<plugin>
				<groupId>com.samaxes.maven</groupId>
				<artifactId>minify-maven-plugin</artifactId>
				<version>1.7.6</version>
				<configuration>
					<jsTargetDir>META-INF/resources/omnifaces</jsTargetDir>
					<nosuffix>true</nosuffix>
					<jsEngine>CLOSURE</jsEngine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.plexus</groupId>
						<artifactId>plexus-utils</artifactId>
						<version>3.5.0</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>minify-omnifaces</id>
						<configuration>
							<webappSourceDir>${project.build.directory}</webappSourceDir>
							<webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
							<jsSourceDir>tsc</jsSourceDir>
							<jsSourceFiles>
								<jsSourceFile>omnifaces.unminified.js</jsSourceFile>
							</jsSourceFiles>
							<jsFinalFile>omnifaces.js</jsFinalFile>
						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
					<execution>
						<id>minify-sw</id>
						<configuration>
							<webappSourceDir>${basedir}/src/main/resources</webappSourceDir>
							<webappTargetDir>${project.build.outputDirectory}</webappTargetDir>
							<jsSourceDir>META-INF/resources/omnifaces</jsSourceDir>
							<jsSourceFiles>
								<jsSourceFile>sw.unminified.js</jsSourceFile>
							</jsSourceFiles>
							<jsFinalFile>sw.js</jsFinalFile>
						</configuration>
						<goals>
							<goal>minify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Configure the jar with the binaries. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<URL>${project.url}</URL>
							<Extension-Name>${project.artifactId}</Extension-Name>
							<Automatic-Module-Name>${project.groupId}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- Configure the jar with the sources. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Configure the jar with the javadoc. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
					<javadocVersion>${javase.version}</javadocVersion>
					<notimestamp>true</notimestamp>
					<splitindex>true</splitindex>
					<doclint>all,-missing</doclint>
					<doctitle>OmniFaces API documentation</doctitle>
					<links>
						<link>https://jakarta.ee/specifications/platform/${jakartaee.version}/apidocs/</link>
					</links>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Configure snapshot deployment to Sonatype. -->
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>

				<!-- Make sure Eclipse itself also runs license format and JavaScript minifier during build. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.mycila</groupId>
										<artifactId>license-maven-plugin</artifactId>
										<versionRange>[4.1,)</versionRange>
										<goals>
											<goal>format</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.samaxes.maven</groupId>
										<artifactId>minify-maven-plugin</artifactId>
										<versionRange>[1.7.6,)</versionRange>
										<goals>
											<goal>minify</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnConfiguration>true</runOnConfiguration>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!-- Global configuration for (integration) test profiles. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<phase>process-test-classes</phase>
							<goals>
								<goal>unpack</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<outputDirectory>${project.build.directory}</outputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.2</version> <!-- 2.22.2 is the minimum version having native JUnit 5 support. -->
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.2</version>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<profile.id>${project.activeProfiles[0].id}</profile.id>
							<omnifaces.jar>${project.build.directory}/${project.build.finalName}.jar</omnifaces.jar>
							<arquillian.browser>${arquillian.browser}</arquillian.browser>
						</systemPropertyVariables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- NOTE: If Eclipse+M2E shows "Plugin execution not covered by lifecycle configuration" error in one of -->
		<!-- below sections, then you need to add a default lifecycle mapping as instructed in M2E documentation: -->
		<!-- https://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html#common-problems -->

		<!-- WildFly - Faces 4.x integration test profile: mvn verify -P wildfly-faces4 -->
		<profile>
			<id>wildfly-faces4</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<version>3.0.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-preview-dist</artifactId>
											<version>${test.wildfly-faces4.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<jboss.home>${project.build.directory}/wildfly-preview-${test.wildfly-faces4.version}</jboss.home>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- WildFly - Faces 3.x integration test profile: mvn verify -P wildfly-faces3 -->
		<profile>
			<id>wildfly-faces3</id>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<version>3.0.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-preview-dist</artifactId>
											<version>${test.wildfly-faces3.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<jboss.home>${project.build.directory}/wildfly-preview-${test.wildfly-faces3.version}</jboss.home>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- OpenLiberty - Faces 3.x integration test profile: mvn verify -P liberty -->
		<profile>
			<id>liberty-faces3</id>
			<dependencies>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>arquillian-liberty-managed-jakarta</artifactId>
					<version>2.1.0</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.openliberty.beta</groupId>
											<artifactId>openliberty-jakartaee9</artifactId>
											<version>${test.liberty-faces3.version}</version>
											<type>zip</type>
										</artifactItem>
										<artifactItem>
											<groupId>io.openliberty.arquillian</groupId>
											<artifactId>arquillian-liberty-support-jakarta</artifactId>
											<version>2.1.0</version>
											<type>zip</type>
											<classifier>feature</classifier>
											<outputDirectory>${project.build.directory}/wlp/usr</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>update-liberty-server</id> <!-- Liberty apparently requires a bit more specific server.xml in order for its own Arquillian plugin to be able to manage it. -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/wlp/usr/servers/defaultServer</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/test/resources/arquillian/liberty</directory>
											<includes>
												<include>server.xml</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.launch>liberty</arquillian.launch>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- GlassFish - Faces 4.x integration test profile: mvn verify -P glassfish-faces4 -->
		<profile>
			<id>glassfish-faces4</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-glassfish-managed-3.1</artifactId>
					<version>1.0.2</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.glassfish.main.distributions</groupId>
											<artifactId>glassfish</artifactId>
											<version>${test.glassfish-faces4.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<GLASSFISH_HOME>${project.build.directory}/glassfish7</GLASSFISH_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- GlassFish - Faces 3.x integration test profile: mvn verify -P glassfish-faces3 -->
		<profile>
			<id>glassfish-faces3</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-glassfish-managed-3.1</artifactId>
					<version>1.0.2</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.glassfish.main.distributions</groupId>
											<artifactId>glassfish</artifactId>
											<version>${test.glassfish-faces3.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<environmentVariables>
								<GLASSFISH_HOME>${project.build.directory}/glassfish6</GLASSFISH_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Tomcat - Mojarra 4.x integration test profile: mvn verify -P tomcat-mojarra4 -->
		<profile>
			<id>tomcat-mojarra4</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-managed-8</artifactId>
					<version>1.2.0.Alpha1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.tomcat</groupId>
											<artifactId>tomcat</artifactId>
											<version>${test.tomcat.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>update-tomcat-users</id> <!-- Else Tomcat unexpectedly spits error that Arquillian isn't allowed to manage Tomcat. Most probably org.jboss.arquillian.container:arquillian-tomcat-managed-8 should be updated to support Tomcat 10 but this isn't available (yet). -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/apache-tomcat-${test.tomcat.version}/conf</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/test/resources/arquillian/tomcat</directory>
											<includes>
												<include>tomcat-users.xml</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.launch>tomcat</arquillian.launch>
								<war.libraries>
									org.glassfish:jakarta.faces:${test.mojarra4.version},
									org.jboss.weld.servlet:weld-servlet-shaded:${test.weld5.version},
									org.hibernate.validator:hibernate-validator:${test.hibernateValidator8.version},
									org.glassfish:jakarta.json:${test.jsonp.version},
									org.glassfish.web:jakarta.servlet.jsp.jstl:${test.jstl.version}
								</war.libraries>
							</systemPropertyVariables>
							<environmentVariables>
								<CATALINA_HOME>${project.build.directory}/apache-tomcat-${test.tomcat.version}</CATALINA_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Tomcat - Mojarra 3.x integration test profile: mvn verify -P tomcat-mojarra3 -->
		<profile>
			<id>tomcat-mojarra3</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-managed-8</artifactId>
					<version>1.2.0.Alpha1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.tomcat</groupId>
											<artifactId>tomcat</artifactId>
											<version>${test.tomcat.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>update-tomcat-users</id> <!-- Else Tomcat unexpectedly spits error that Arquillian isn't allowed to manage Tomcat. Most probably org.jboss.arquillian.container:arquillian-tomcat-managed-8 should be updated to support Tomcat 10 but this isn't available (yet). -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/apache-tomcat-${test.tomcat.version}/conf</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/test/resources/arquillian/tomcat</directory>
											<includes>
												<include>tomcat-users.xml</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.launch>tomcat</arquillian.launch>
								<war.libraries>
									org.glassfish:jakarta.faces:${test.mojarra3.version},
									org.jboss.weld.servlet:weld-servlet-shaded:${test.weld4.version},
									org.hibernate.validator:hibernate-validator:${test.hibernateValidator7.version},
									org.glassfish:jakarta.json:${test.jsonp.version},
									org.glassfish.web:jakarta.servlet.jsp.jstl:${test.jstl.version}
								</war.libraries>
							</systemPropertyVariables>
							<environmentVariables>
								<CATALINA_HOME>${project.build.directory}/apache-tomcat-${test.tomcat.version}</CATALINA_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Tomcat - MyFaces 4.x integration test profile: mvn verify -P tomcat-myfaces4 -->
		<profile>
			<id>tomcat-myfaces4</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-managed-8</artifactId>
					<version>1.2.0.Alpha1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.tomcat</groupId>
											<artifactId>tomcat</artifactId>
											<version>${test.tomcat.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>update-tomcat-users</id> <!-- Else Tomcat unexpectedly spits error that Arquillian isn't allowed to manage Tomcat. Most probably org.jboss.arquillian.container:arquillian-tomcat-managed-8 should be updated to support Tomcat 10 but this isn't available (yet). -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/apache-tomcat-${test.tomcat.version}/conf</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/test/resources/arquillian/tomcat</directory>
											<includes>
												<include>tomcat-users.xml</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.launch>tomcat</arquillian.launch>
								<war.libraries>
									org.apache.myfaces.core:myfaces-impl:${test.myfaces4.version},
									org.jboss.weld.servlet:weld-servlet-shaded:${test.weld5.version},
									org.hibernate.validator:hibernate-validator:${test.hibernateValidator8.version},
									org.glassfish:jakarta.json:${test.jsonp.version},
									org.glassfish.web:jakarta.servlet.jsp.jstl:${test.jstl.version}
								</war.libraries>
							</systemPropertyVariables>
							<environmentVariables>
								<CATALINA_HOME>${project.build.directory}/apache-tomcat-${test.tomcat.version}</CATALINA_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Tomcat - MyFaces 3.x integration test profile: mvn verify -P tomcat-myfaces3 -->
		<profile>
			<id>tomcat-myfaces3</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.container</groupId>
					<artifactId>arquillian-tomcat-managed-8</artifactId>
					<version>1.2.0.Alpha1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.tomcat</groupId>
											<artifactId>tomcat</artifactId>
											<version>${test.tomcat.version}</version>
											<type>zip</type>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>update-tomcat-users</id> <!-- Else Tomcat unexpectedly spits error that Arquillian isn't allowed to manage Tomcat. Most probably org.jboss.arquillian.container:arquillian-tomcat-managed-8 should be updated to support Tomcat 10 but this isn't available (yet). -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/apache-tomcat-${test.tomcat.version}/conf</outputDirectory>
									<resources>
										<resource>
											<directory>${project.basedir}/src/test/resources/arquillian/tomcat</directory>
											<includes>
												<include>tomcat-users.xml</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<arquillian.launch>tomcat</arquillian.launch>
								<war.libraries>
									org.apache.myfaces.core:myfaces-impl:${test.myfaces3.version},
									org.jboss.weld.servlet:weld-servlet-shaded:${test.weld4.version},
									org.hibernate.validator:hibernate-validator:${test.hibernateValidator7.version},
									org.glassfish:jakarta.json:${test.jsonp.version},
									org.glassfish.web:jakarta.servlet.jsp.jstl:${test.jstl.version}
								</war.libraries>
							</systemPropertyVariables>
							<environmentVariables>
								<CATALINA_HOME>${project.build.directory}/apache-tomcat-${test.tomcat.version}</CATALINA_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Piranha - Faces 4.x integration test profile: mvn verify -P piranha-faces4 -->
		<!-- 
				Note1: Piranha must be run using JDK 16, so the entire test suite should be run with JDK 16.
				There's no need to compile OmniFaces with JDK 16. JDK 11 is fine for that.
			
				Note2: Piranha is still in development, and at the moment not everything is implemented.
				The following is the current status as-of Piranha 21.4:

				Tests run: 93, Failures: 6, Errors: 7, Skipped: 0
		 -->
		<profile>
			<id>piranha-faces4</id>
			<dependencies>
				<dependency>
					<groupId>cloud.piranha.arquillian</groupId>
					<artifactId>piranha-arquillian-server</artifactId>
					<version>${test.piranha.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<argLine>--add-opens java.base/java.lang=ALL-UNNAMED</argLine>
							<systemPropertyVariables>
								<javaEEServer>piranha-embedded</javaEEServer>
								<piranha.rootIsWarName>true</piranha.rootIsWarName>
								<war.libraries>
									org.glassfish:jakarta.faces:${test.mojarra4.version},
									org.hibernate.validator:hibernate-validator:${test.hibernateValidator8.version},
									org.glassfish:jakarta.json:${test.jsonp.version},
									org.glassfish.tyrus:tyrus-core:${test.tyrus.version}
								</war.libraries>
								<!-- tyrus-core should actually be tyrus-container-servlet, but it currently fails to init in Piranha -->
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- TomEE - Faces 3.x integration test profile: mvn verify -P tomee-faces3 -->
		<profile>
			<id>tomee-faces3</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.tomee</groupId>
					<artifactId>arquillian-tomee-remote</artifactId>
					<version>${test.tomee-faces3.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.apache.tomee</groupId>
											<artifactId>apache-tomee</artifactId>
											<version>${test.tomee-faces3.version}</version>
											<type>zip</type>
											<classifier>webprofile</classifier>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<tomee.dir>${project.build.directory}/apache-tomee-webprofile-${test.tomee-faces3.version}</tomee.dir>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Release deploy: mvn clean deploy -P release -->
		<profile>
			<id>release</id>
			<build>
				<plugins>

					<!-- Signing with GPG is a requirement for a release deployment to Maven central. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
